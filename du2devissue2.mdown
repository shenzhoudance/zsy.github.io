issue2:str提片段转为unix_time格式再放回str

## 0.背景
需要str提片段转为unix_time格式再放回str
如下效果

```
111009,1.25,3.50,2.25,5.50,5.00,7.00,5,2,1,4
111010,1.00,4.00,2.00,4.25,5.50,6.00,5,2,0,4
111011,0.50,3.25,3.50,6.00,4.00,7.00,5,0,2,5
```

目标效果
```
1318089600,1.25,3.50,2.25,5.50,5.00,7.00,5,2,1,4
1318176000,1.00,4.00,2.00,4.25,5.50,6.00,5,2,0,4
1318262400,0.50,3.25,3.50,6.00,4.00,7.00,5,0,2,5
```

## 1.分析

- 问题1.把单独元素从str中提出来
  方案1.1 单独提出年月日->str直接切片
    
```
from datetime import datetime
import time
with open('sample_year2sec.csv') as f:
    for line in f.readlines()[1:4]:
        nl = line[:-1]
        print(nl[0:6])
>>>
111009
111010
111011

#方案1.1可行
```

  方案1.2str做list->list提元素

```
from datetime import datetime
import time
with open('sample_year2sec.csv') as f:
    for line in f.readlines()[1:4]:
        nl = line[:-1]
        _nl = nl.split(',')
        print(_nl)
>>>
['111009', '1.25', '3.50', '2.25', '5.50', '5.00', '7.00', '5', '2', '1', '4']
['111010', '1.00', '4.00', '2.00', '4.25', '5.50', '6.00', '5', '2', '0', '4']
['111011', '0.50', '3.25', '3.50', '6.00', '4.00', '7.00', '5', '0', '2', '5']

#方案1.2可行
```

- 问题2.把str对象转为datetime对象
  方案2.1 unix_time经典套路

```
#接方案1.1
        d = datetime.strptime(nl[0:6], '%y%m%d')
        t = int(time.mktime(d.timetuple()))
        print(t)
>>>
1318089600
1318176000
1318262400

#方案2.1可行
```

  方案2.2 unix_time经典套路
```
#接方案1.2
        d = datetime.strptime(_nl[0], '%y%m%d')
        t = int(time.mktime(d.timetuple()))
        print(t)
>>>
1318089600
1318176000
1318262400

#方案2.2可行
```

- 问题3.datetime对象放回str(合并拼接字符串)
  方案3.1 str与str拼接

```
#接方案2.1
        _t = str(t)
        print(_t + nl[6:])
>>>>
1318089600,1.25,3.50,2.25,5.50,5.00,7.00,5,2,1,4
1318176000,1.00,4.00,2.00,4.25,5.50,6.00,5,2,0,4
1318262400,0.50,3.25,3.50,6.00,4.00,7.00,5,0,2,5

#方案3.1可行
```

  方案3.2 list元素与str拼接

```
#接方案2.2
        _t = str(t) + ','
        print(_t + ','.join(_nl[1:]))
>>>>
1318089600,1.25,3.50,2.25,5.50,5.00,7.00,5,2,1,4
1318176000,1.00,4.00,2.00,4.25,5.50,6.00,5,2,0,4
1318262400,0.50,3.25,3.50,6.00,4.00,7.00,5,0,2,5 

#方案3.2可行     
```



## 2.新问题
如何验证unix秒数都是正确的呢？

## 3.解答

## 4.经验
str与iterable对象拼接是常规套路
str转datetime转unix_time是新见套路
最难在于
意识到, 时间有几种经典结构strp_time, unix_time等
且这些时间结构是大部分计算机语言所通用的

套路:尽量把目标定为世界上通用的/经典的数据结构...

时间账单
5 * 42mins

